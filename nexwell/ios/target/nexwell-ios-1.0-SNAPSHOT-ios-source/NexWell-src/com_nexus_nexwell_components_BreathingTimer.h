#ifndef __COM_NEXUS_NEXWELL_COMPONENTS_BREATHINGTIMER__
#define __COM_NEXUS_NEXWELL_COMPONENTS_BREATHINGTIMER__

#include "cn1_globals.h"
#include "java_lang_Object.h"
extern struct clazz class__com_nexus_nexwell_components_BreathingTimer;
extern void __INIT_VTABLE_com_nexus_nexwell_components_BreathingTimer(CODENAME_ONE_THREAD_STATE, void** vtable);
extern void __STATIC_INITIALIZER_com_nexus_nexwell_components_BreathingTimer(CODENAME_ONE_THREAD_STATE);
extern void __FINALIZER_com_nexus_nexwell_components_BreathingTimer(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT objToDelete);
extern void __GC_MARK_com_nexus_nexwell_components_BreathingTimer(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT objToMark, JAVA_BOOLEAN force);
extern JAVA_OBJECT __NEW_com_nexus_nexwell_components_BreathingTimer(CODENAME_ONE_THREAD_STATE);

JAVA_VOID com_nexus_nexwell_components_BreathingTimer___INIT_____com_codename1_ui_Form(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_VOID com_nexus_nexwell_components_BreathingTimer_start__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_nexus_nexwell_components_BreathingTimer_stop__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_nexus_nexwell_components_BreathingTimer_reset__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_nexus_nexwell_components_BreathingTimer_lambda$new$0___com_nexus_nexwell_components_BreathingTimer(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Arg1);

JAVA_VOID com_nexus_nexwell_components_BreathingTimer___INIT____(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_BOOLEAN com_nexus_nexwell_components_BreathingTimer_equals___java_lang_Object_R_boolean(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_OBJECT __cn1Arg1);

JAVA_OBJECT com_nexus_nexwell_components_BreathingTimer_getClass___R_java_lang_Class(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_INT com_nexus_nexwell_components_BreathingTimer_hashCode___R_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_nexus_nexwell_components_BreathingTimer_notify__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_nexus_nexwell_components_BreathingTimer_notifyAll__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_OBJECT com_nexus_nexwell_components_BreathingTimer_toString___R_java_lang_String(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_nexus_nexwell_components_BreathingTimer_wait__(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);

JAVA_VOID com_nexus_nexwell_components_BreathingTimer_wait___long(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_LONG __cn1Arg1);

JAVA_VOID com_nexus_nexwell_components_BreathingTimer_wait___long_int(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject, JAVA_LONG __cn1Arg1, JAVA_INT __cn1Arg2);

JAVA_OBJECT com_nexus_nexwell_components_BreathingTimer_clone___R_java_lang_Object(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT  __cn1ThisObject);
#define virtual_com_nexus_nexwell_components_BreathingTimer_start__ com_nexus_nexwell_components_BreathingTimer_start__
#define virtual_com_nexus_nexwell_components_BreathingTimer_stop__ com_nexus_nexwell_components_BreathingTimer_stop__
#define virtual_com_nexus_nexwell_components_BreathingTimer_reset__ com_nexus_nexwell_components_BreathingTimer_reset__
JAVA_OBJECT get_field_com_nexus_nexwell_components_BreathingTimer_timer(JAVA_OBJECT t);
void set_field_com_nexus_nexwell_components_BreathingTimer_timer(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Val, JAVA_OBJECT __cn1T);
JAVA_INT get_field_com_nexus_nexwell_components_BreathingTimer_phase(JAVA_OBJECT t);
void set_field_com_nexus_nexwell_components_BreathingTimer_phase(CODENAME_ONE_THREAD_STATE, JAVA_INT __cn1Val, JAVA_OBJECT __cn1T);
JAVA_DOUBLE get_field_com_nexus_nexwell_components_BreathingTimer_seconds(JAVA_OBJECT t);
void set_field_com_nexus_nexwell_components_BreathingTimer_seconds(CODENAME_ONE_THREAD_STATE, JAVA_DOUBLE __cn1Val, JAVA_OBJECT __cn1T);
JAVA_DOUBLE get_field_com_nexus_nexwell_components_BreathingTimer_interval(JAVA_OBJECT t);
void set_field_com_nexus_nexwell_components_BreathingTimer_interval(CODENAME_ONE_THREAD_STATE, JAVA_DOUBLE __cn1Val, JAVA_OBJECT __cn1T);
JAVA_BOOLEAN get_field_com_nexus_nexwell_components_BreathingTimer_active(JAVA_OBJECT t);
void set_field_com_nexus_nexwell_components_BreathingTimer_active(CODENAME_ONE_THREAD_STATE, JAVA_BOOLEAN __cn1Val, JAVA_OBJECT __cn1T);
JAVA_OBJECT get_field_com_nexus_nexwell_components_BreathingTimer_form(JAVA_OBJECT t);
void set_field_com_nexus_nexwell_components_BreathingTimer_form(CODENAME_ONE_THREAD_STATE, JAVA_OBJECT __cn1Val, JAVA_OBJECT __cn1T);


struct obj__com_nexus_nexwell_components_BreathingTimer {
    DEBUG_GC_VARIABLES
    struct clazz *__codenameOneParentClsReference;
    int __codenameOneReferenceCount;
    void* __codenameOneThreadData;
    int __codenameOneGcMark;
    void* __ownerThread;
    int __heapPosition;
    JAVA_OBJECT com_nexus_nexwell_components_BreathingTimer_timer;
    JAVA_INT com_nexus_nexwell_components_BreathingTimer_phase;
    JAVA_DOUBLE com_nexus_nexwell_components_BreathingTimer_seconds;
    JAVA_DOUBLE com_nexus_nexwell_components_BreathingTimer_interval;
    JAVA_BOOLEAN com_nexus_nexwell_components_BreathingTimer_active;
    JAVA_OBJECT com_nexus_nexwell_components_BreathingTimer_form;
};



#endif //__COM_NEXUS_NEXWELL_COMPONENTS_BREATHINGTIMER__
